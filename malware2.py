import os
import magic
import mimetypes

def is_packed_or_obfuscated(file_path):
    """
    Checks if the file at the given path contains code that is packed or obfuscated.

    Parameters:
        file_path (str): The path of the file to check.

    Returns:
        bool: Returns True if the file contains packed or obfuscated code, False otherwise.
    """
    # Check the file type using the magic library.
    mime = magic.Magic(mime=True)
    file_type = mime.from_file(file_path)

    # Get the file extension.
    file_extension = os.path.splitext(file_path)[1]

    # If the MIME type and file extension are different, the file may be obfuscated or packed.
    if mimetypes.guess_extension(file_type) != file_extension:
        return True

    # If the file is not executable or is not a script, it is less likely to contain packed or obfuscated code.
    if not ('application/x-executable' in file_type or 'application/x-sharedlib' in file_type or
            'application/x-shellscript' in file_type or 'application/x-dosexec' in file_type):
        return False

    # Use the 'file' command to check if the file is packed or obfuscated.
    file_output = os.popen(f"file '{file_path}'").read()
    if 'packed' in file_output or 'obfuscated' in file_output:
        return True

    return False

if __name__ == '__main__':
    file_path = './mal.doc.js'
    if is_packed_or_obfuscated(file_path):
        print(f"'{file_path}' 파일은 패킹되어 있거나 난독화된 코드를 포함하고 있습니다.")
    else:
        print(f"'{file_path}' 파일은 패킹되어 있거나 난독화된 코드를 포함하고 있지 않습니다.")

